package com.ztel.app.service.wms.Impl;

import java.math.BigDecimal;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.PreparedStatementCallback;
import org.springframework.stereotype.Service;

import com.ztel.app.persist.mybatis.wms.InBoundVoMapper;
import com.ztel.app.service.wms.InBoundService;
import com.ztel.app.vo.wms.InBoundVo;
import com.ztel.framework.vo.Pagination;
@Service
public class InBoundServiceImpl implements InBoundService {

	
	@Autowired
	private InBoundVoMapper inBoundVoMapper = null;
	 @Autowired 
	 DataSource ds = null;
	 JdbcTemplate template;
	 
	 private Map<String, String> sortKeyMapping = new HashMap<>();
		
		public InBoundServiceImpl() {
			//TODO 请在这里填入排序的key转换为列名, 防止SQL注入;每个Service业务域用自己的mapping,在BaseCtrl容易重复
//			sortKeyMapping.put(key, value)
			sortKeyMapping.put("createtime", "createtime");
			sortKeyMapping.put("consignsor", "consignsor");
		}
		
	@Override
	public void InsertInBound(InBoundVo vo) {
		initJdbcTemplate();
		// TODO Auto-generated method stub
		BigDecimal id =  template.execute("select S_WMS_INOUTBOUND.nextval from dual",new PreparedStatementCallback() {  
			   public BigDecimal doInPreparedStatement(PreparedStatement pstmt) throws SQLException, DataAccessException {  
				       pstmt.execute();  
			        ResultSet rs = pstmt.getResultSet();  
			        rs.next();  
			        return rs.getBigDecimal(1);  
				    }  
				});  
		vo.setInboundid(id);
		inBoundVoMapper.insertSelective(vo);
	}
	public void initJdbcTemplate()
	{
		template=new JdbcTemplate(ds);
	}
	
public List<InBoundVo> selectInBoundPageList(Pagination<?> page) {
		
		page.sortKeyToColumn(sortKeyMapping);
		return this.inBoundVoMapper.selectInBoundPageList(page);
	}
}
