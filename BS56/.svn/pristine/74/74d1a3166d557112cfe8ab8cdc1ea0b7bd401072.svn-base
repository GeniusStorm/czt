package com.ztel.app.web.ctrl.sq;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.ztel.app.service.sq.ComplaintService;
import com.ztel.app.service.sys.RouteInfoService;
import com.ztel.app.service.wms.CustomerService;
import com.ztel.app.vo.sq.ComplaintVo;
import com.ztel.app.vo.sys.RoleInfoVo;
import com.ztel.app.vo.sys.RouteInfoVo;
import com.ztel.app.vo.wms.CustomerVo;
import com.ztel.framework.vo.Pagination;
import com.ztel.framework.web.ctrl.BaseCtrl;


/**
 * @author lcf
 * @since 2017年3月16日
 * 菜单控制
 */
@Controller
@RequestMapping("/sq/complaint")
public class ComplaintCtrl extends BaseCtrl{
	private static Logger logger = LogManager.getLogger(ComplaintCtrl.class);
	
	@Autowired
	private ComplaintService complaintService = null;
	
	@Autowired 
	private RouteInfoService routeInfoService = null;
	
	@Autowired
	private CustomerService customerService = null;
	
	@RequestMapping("toComplaint")
	public String toComplaint(HttpServletRequest request) {
		return "/sq/v_complaint";
	}
	
	@RequestMapping("toComplaintNew")
	public String toComplaintNew(HttpServletRequest request,HttpServletResponse resp) throws Exception{
		//resp.sendRedirect("/BS56/sq/complaint/openComplaintNew");
		return "/sq/v_complaintNew";
	}
	
	@RequestMapping("openComplaintNew")
	public String openComplaintNew(HttpServletRequest request) {
		return "redirect:/sq/v_complaintNew";
	}
	
	@RequestMapping(value="getComplaintList")
	 @ResponseBody
	 public Map<String, Object> getComplaintList(ComplaintVo complaintVo, HttpServletRequest request) throws Exception{
		 Map<String, Object> result=new HashMap<String, Object>();  
		 
		Pagination<?> page = this.getPagination(request);
		if (complaintVo!=null) {
			 page.setParam(complaintVo);
		}
		List<ComplaintVo> complaintVoList = new ArrayList<ComplaintVo>();
		complaintVoList = complaintService.getComplaintList(page);
		
		int totals=0;

		 result.put("rows",complaintVoList);  
		 result.put("total",page.getTotalCount());  
		 
		return result;
	}
	
	/**
	 * 根据车组code获取
	 * @param routecode
	 * @return
	 */
	 @RequestMapping("getDriverAndCashierByRotecode")
	 @ResponseBody
	 public RouteInfoVo getDriverAndCashierByRotecode(String routecode){
		 return  routeInfoService.getDriverAndCashierByRotecode(routecode);
	 }
	 
	 @RequestMapping("getCustListByRouteCode")
	 @ResponseBody
	 public List<CustomerVo> getCustListByRouteCode(HttpServletRequest request)
	 {
		 List<CustomerVo>  custList = null;
		 
		 //String routecode = request.getParameter("routecode");
		// if(routecode==null)routecode="";
		 String condname = request.getParameter("condname");
		 if(condname==null)condname="";
		 
		 CustomerVo customerVo = new CustomerVo();
		 //customerVo.setRoutecode(routecode);
		 customerVo.setParam(condname);
		 custList = customerService.getListByCond(customerVo);
		 return custList;
	 }
	 
	 /**
	  * 新增角色
	  * @return
	  * @throws Exception
	  */
	 @RequestMapping(value="doSave",method=RequestMethod.POST)
	// @ResponseBody
	 public   void doSave(ComplaintVo cmplaintVo,HttpServletResponse response) throws Exception {
		 Map<String, Object> map=new HashMap<String, Object>();  
		 int total=0;
        
		 System.out.println("roleid="+cmplaintVo.getId()+",roleName="+cmplaintVo.getCusername()+",licensecode="+cmplaintVo.getAddr());
		 try {
			 complaintService.doNewComplaint(cmplaintVo);
			 map.put("msg", "成功");
			 total=1;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();  
			map.put("msg", "失败");
		}
		 map.put("total", total);
		 
		 //直接使用注解@ResponseBody，框架自动返回json串，但是form形式提交的返回json在IE在会出现下载json的提示，所以修改成设置response的形式
		 String result = JSON.toJSONString(map);
		 response.setContentType("text/html;charset=UTF-8");
		 response.getWriter().write(result);  

		 //return result;
	 }
}
